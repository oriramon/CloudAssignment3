
name: assignment3
on:
  push
jobs:
  # builds the image for the service. if successful, proceeds to test job.
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set DATE and init log file
      run: | 
        DATE=$(date -Iminutes)
        echo "$DATE" > /tmp/log.txt
        echo "Ori Ramon, Lucy Hass" >> /tmp/log.txt
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and export
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        tags: mealsvr:latest
        outputs: type=docker,dest=/tmp/image.tar
    - name: check image is exported
      run: ls /tmp
    - name: Log Error Message - Failure
      if: failure()
      run: echo "image not able to be built" >> /tmp/log.txt
    - name: Log Success Message
      run: echo "image successfully built" >> /tmp/log.txt
    - name: Upload log
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: log
        path: /tmp/log.txt
        # archive-format: none
    # only executed if build successful
    - name: Upload image
      uses: actions/upload-artifact@v3
      with:
        name: image
        path: /tmp/image.tar
    
  # runs image exported from build job in container, uses pytest to test service.
  # if successful, proceeds to query job.
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      # download image, run in a container
      - name: Download image from build job
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      - name: Download log from build job
        uses: actions/download-artifact@v3
        with:
          name: log
          path: /tmp
      - name: Load Docker image from previous job
        run: docker load --input /tmp/image.tar
      - name: check mealsvr image is loaded
        run: docker image ls
      - name: run image in container
        run: docker run -p8000:8000 mealsvr
      - name: check container is running
        run: docker ps
      - name: Log container status - failure
        if: failure()
        run: echo "Container failed to run" >> /tmp/log.txt
      - name: Log container status - success
        if: success()
        run: echo "Container up and running" >> /tmp/log.txt

      # set up python, install dependencies
      - name: Set up Python
        uses: actions/setup-python@v4
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install requests
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # run tests with pytest, check results
      - name: Test with pytest
        run: |
          cd tests
          pytest -v assn3_tests.py > assn3_test_results.txt
      # update log with test results
      - name: Log test results - success
        if: success()
        run: echo "tests succeeded" >> /tmp/log.txt
      - name: Log test results - failure
        if: failure()
        run: echo "tests failed" >> /tmp/log.txt
      - name: upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: assn3_test_results
          path: tests/assn3_test_results.txt
      - name: upload log
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: /tmp/log.txt
  
  # runs image in container. issue requests to service, record results in log file.
  query:
    needs: test
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3
      # download image, run in a container
      - name: Download image from build job
        uses: actions/download-artifact@v3
        with:
          name: image
          path: /tmp
      # - name: Download log from build job
      #   uses: actions/download-artifact@v3
      #   with:
      #     name: log
      #     path: /tmp
      - name: Load Docker image from previous job
        run: docker load --input /tmp/image.tar
      - name: check mealsvr image is loaded
        run: docker image ls
      - name: run image in container
        run: docker run -p8000:8000 mealsvr
      - name: check container is running
        run: docker ps
      # run queries, upload responses
      - name: run queries
        run: python query.py
      - name: upload responses
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: responses
          path: /tmp/response.txt
        
      
